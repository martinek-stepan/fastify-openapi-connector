openapi: 3.1.0
info:
  title: tester
  description: API for testing fastify-openapi-connector
  contact:
    name: Stepan Martinek
    email: stepan.martinek@lego.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 0.0.2
servers:
  - url: http://localhost:3333
    description: Testing endpoint
security:
  - test-sec: [scope:yay-nay]

components:
  securitySchemes:
    test-sec:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    offsetParam: # <-- Arbitrary name for the definition that will be used to refer to it.
      # Not necessarily the same as the parameter name.
      in: query
      name: offset
      required: false
      schema:
        type: integer
        minimum: 0
      description: The number of items to skip before starting to collect the result set.
    limitParam:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 50
        default: 20
      description: The numbers of items to return.
  schemas:
    fail:
      type: object
      properties:
        code:
          type: integer
          example: 404
        message:
          type: string
          example: Not Found
      required:
        - code
        - message
paths:
  /users:
    get:
      operationId: usersGet
      summary: Gets a list of users.
      parameters:
        - $ref: "#/components/parameters/offsetParam"
        - $ref: "#/components/parameters/limitParam"
      responses:
        "200":
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/fail"
  /teams:
    get:
      operationId: teamsGet
      summary: Gets a list of teams.
      parameters:
        - $ref: "#/components/parameters/offsetParam"
        - $ref: "#/components/parameters/limitParam"
      responses:
        "200":
          description: OK
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                x-test: "test"
                properties:
                  code:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: Not Found
                required:
                  - code
                  - message