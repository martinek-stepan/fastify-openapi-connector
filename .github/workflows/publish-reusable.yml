name: Publish Package to npmjs
on:
  workflow_call:
    inputs:
      directory:
        required: true
        type: string
    secrets:
      NPM_TOKEN:
        description: "NPM Token"
        required: true
      
permissions:
  contents: read
  id-token: write

jobs:
  check-linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm install
        working-directory: ${{ inputs.directory }}
      
      - name: Check linting
        run: npm run lint:ci
        working-directory: ${{ inputs.directory }}
      
  publish-npm:
    needs:
      - check-linting
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[skip-npm]') != false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm install
        working-directory: ${{ inputs.directory }}
      
      - name: Build
        run: npm run build
        working-directory: ${{ inputs.directory }}
        
      - name: Clean install a project
        run: npm ci
        working-directory: ${{ inputs.directory }}
      
      - name: Publish to npm
        run: npm publish --provenance --access public
        working-directory: ${{ inputs.directory }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-jsr:
    needs:
      - check-linting
    if: contains(github.event.head_commit.message, '[skip-jsr]') != false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm install
        working-directory: ${{ inputs.directory }}
      
      - run: npx jsr publish
        working-directory: ${{ inputs.directory }}